# Generated by Django 3.2.4 on 2021-08-06 12:34

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Teacher', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Child',
            fields=[
                ('slug', models.CharField(default=0, help_text='Do not change it', max_length=5, primary_key=True, serialize=False)),
                ('Name', models.CharField(default='Topu Biswas', max_length=40)),
                ('Phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('Education_Level', models.SmallIntegerField(choices=[(0, 'Class 0'), (1, 'Class 1'), (2, 'Class 2'), (3, 'Class 3'), (4, 'Class 4'), (5, 'Class 5'), (6, 'Class 6'), (7, 'Class 7'), (8, 'Class 8'), (9, 'Class 9'), (10, 'Class 10'), (11, 'Class 11'), (12, 'Class 12'), (20, 'Others')], default=20)),
                ('Education_Medium', models.SmallIntegerField(choices=[(1, 'Bangla Medium'), (2, 'English Medium'), (3, 'English Version'), (4, 'Arbi Medium'), (5, 'Arbi Version'), (6, 'Technical'), (7, 'Others')], default=1)),
                ('Gender', models.SmallIntegerField(choices=[(1, 'Male'), (2, 'Female'), (3, 'Other')], default=1)),
                ('Type', models.SmallIntegerField(choices=[(1, 'Normal'), (2, 'Special')], default=1)),
                ('Confirmed', models.BooleanField(default=False)),
                ('Free_Time', models.TimeField(blank=True, null=True)),
                ('Free_Duration', models.DurationField(blank=True, choices=[(datetime.timedelta(seconds=3600), '01 Hour'), (datetime.timedelta(seconds=5400), '01H 30M'), (datetime.timedelta(seconds=7200), '02 Hour'), (datetime.timedelta(seconds=9000), '02H 30M'), (datetime.timedelta(seconds=10800), '03 Hour')], null=True)),
                ('Important_Note', models.TextField(blank=True, null=True)),
                ('Created', models.DateTimeField(auto_now_add=True, null=True)),
                ('Expected_Salary', models.IntegerField(blank=True, null=True)),
                ('Expected_Subjects', models.CharField(blank=True, max_length=200, null=True)),
                ('Teacher_Gender', models.SmallIntegerField(choices=[(1, 'Male'), (2, 'Female'), (3, 'Other'), (4, 'All')], default=4)),
                ('Teacher_Level', models.SmallIntegerField(choices=[(0, 'Secondary'), (1, 'Higher Secondary'), (3, 'Honors')], default=3)),
                ('Teacher_Background', models.SmallIntegerField(choices=[(1, 'General'), (2, 'Science'), (3, 'Engineer'), (4, 'Medical')], default=3)),
                ('Teacher_Type', models.SmallIntegerField(choices=[(1, 'Normal'), (2, 'Special')], default=1)),
                ('Teacher_Experience', models.SmallIntegerField(choices=[(0, 'No experience needed'), (1, '1/2 years experience'), (2, '3/5 years experience'), (3, 'More than 5 years experience')], default=0)),
                ('Teacher_Age', models.SmallIntegerField(choices=[(0, '<20'), (1, '21-25'), (2, '26-35'), (3, '>35')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ChildGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Child', models.ManyToManyField(blank=True, to='GuardianArea.Child')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Note', models.TextField(null=True)),
                ('Created', models.DateTimeField(auto_now_add=True, null=True)),
                ('Writer', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GuardianDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(default='Tovfikur Rahman', max_length=40, null=True)),
                ('Phone', phonenumber_field.modelfields.PhoneNumberField(default='+8801720274040', max_length=128, region=None)),
                ('Address', models.CharField(blank=True, max_length=250, null=True)),
                ('Profession', models.CharField(blank=True, max_length=100, null=True)),
                ('Expected_Range', models.SmallIntegerField(blank=True, null=True)),
                ('Important_Note', models.TextField(blank=True, null=True)),
                ('Rating', models.SmallIntegerField(blank=True, null=True)),
                ('Ban', models.BooleanField(default=False)),
                ('NID', models.ImageField(blank=True, null=True, upload_to='NID')),
                ('Reminder', models.DateTimeField(blank=True, null=True)),
                ('Created', models.DateTimeField(auto_now_add=True, null=True)),
                ('Partner_Phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('Child', models.ManyToManyField(blank=True, to='GuardianArea.Child')),
                ('Child_Group', models.ManyToManyField(blank=True, to='GuardianArea.ChildGroup')),
                ('Note', models.ManyToManyField(to='GuardianArea.Note')),
            ],
        ),
        migrations.AddField(
            model_name='child',
            name='Note',
            field=models.ManyToManyField(to='GuardianArea.Note'),
        ),
        migrations.AddField(
            model_name='child',
            name='Teacher_University',
            field=models.ManyToManyField(blank=True, to='Teacher.University'),
        ),
    ]
