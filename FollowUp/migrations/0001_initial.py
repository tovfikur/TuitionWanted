# Generated by Django 3.2.4 on 2021-08-06 12:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('Teacher', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=35, unique=True)),
                ('is_Checker', models.BooleanField(default=False)),
                ('is_FollowUpper', models.BooleanField(default=False)),
                ('is_Reserves', models.BooleanField(default=False)),
                ('is_OfferCatcher', models.BooleanField(default=False)),
                ('is_Guardian', models.BooleanField(default=False)),
                ('is_Teacher', models.BooleanField(default=False)),
                ('Phone_Number', phonenumber_field.modelfields.PhoneNumberField(default='+8801796693300', max_length=128, region=None)),
                ('Avatar', models.ImageField(null=True, upload_to='')),
                ('Job_Title', models.CharField(max_length=20, null=True)),
                ('Job_Shift', models.TimeField(blank=True, null=True)),
                ('NID', models.FileField(null=True, upload_to='')),
                ('Proof_Of_Presence', models.FileField(null=True, upload_to='')),
                ('Teacher', models.ManyToManyField(blank=True, to='Teacher.Teacher')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TemporaryTuitionForChild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Teacher', models.ManyToManyField(to='Teacher.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Salary', models.IntegerField(default=3000)),
                ('Starting_Date', models.DateField(auto_now_add=True)),
                ('Ending_Date', models.DateField(blank=True, null=True)),
                ('Note', models.TextField(blank=True, null=True)),
                ('Teacher', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='Teacher.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='PermanentTuitionForTeacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Teacher.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='GuardianHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Salary', models.IntegerField(default=3000)),
                ('Note', models.TextField(blank=True, null=True)),
                ('Time', models.DateTimeField(auto_now_add=True)),
                ('Checker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Checker', to=settings.AUTH_USER_MODEL)),
                ('FollowUpper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='FollowUpper', to=settings.AUTH_USER_MODEL)),
                ('OfferCatcher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='OfferCatcher', to=settings.AUTH_USER_MODEL)),
                ('Reserver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Reserver', to=settings.AUTH_USER_MODEL)),
                ('Teacher', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Teacher.teacher')),
            ],
        ),
    ]
